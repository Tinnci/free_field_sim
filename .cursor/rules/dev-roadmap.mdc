---
description: 
globs: *.py
alwaysApply: false
---
# 项目发展方向与技术选型建议

## 当前基础（已完成）
- 已实现基于 `pyroomacoustics` 的房间声学仿真、信号处理与评估。
- 具备自定义声源、麦克风类和基础2D/3D可视化。
- 已实现GUI、配置管理、对象参数化。
- 已支持PyVista 3D对象点击拾取、结构化对象管理、默认配置保存目录，交互和初始化细节已优化。

## 下一步目标
- 从命令行脚本工具升级为带有图形用户界面（GUI）和高级3D可视化的交互式应用。（已完成基础，3D高级可视化为后续扩展）

## 1. GUI开发（已完成基础）
- 目标：让用户通过图形界面设置仿真参数、运行仿真、查看结果。
- 推荐技术：
  - **PyQt6/PySide6**（已采用，功能强大，适合嵌入3D视图）
  - 也可用 Tkinter（简单）、Kivy、Dear PyGui 等
- 关键功能：
  - 场景设置、仿真控制、结果展示、配置管理（均已实现）
  - 后续可扩展更复杂的参数面板与交互

## 2. 3D可视化
- 目标：三维展示房间、声源、麦克风及其空间关系，支持交互。
- 推荐技术：
  - **PyVista**（已集成，基础3D展示与交互已实现，高级渲染与动画为后续扩展）
  - 也可考虑 Mayavi、Open3D、PyOpenGL 等
- 关键功能：
  - 3D房间结构、声源/麦克风空间分布（已实现）
  - 交互式相机控制、对象选择与参数显示（已实现，推荐用 track_click_position 实现对象拾取）
  - （进阶）3D场景内编辑、声场分布可视化（未实现，后续扩展）

## 3. 代码结构建议
- 推荐将 `src` 目录细分为：
  - `core/`：仿真核心（声学元素、房间仿真、信号处理）
  - `gui/`：GUI相关代码（主窗口、控件、对话框）
  - `visualization/`：2D/3D可视化模块
  - `utils/`：工具函数（如配置管理）
  - `main_app.py`：应用主入口，负责GUI初始化与模块集成

## 发展步骤建议
1. 代码重构与模块化（已完成）
2. 搭建基础GUI，实现参数输入与2D结果展示（已完成）
3. 集成基础3D可视化，展示空间布局（已完成）
4. 增强GUI交互性，支持动态编辑与配置管理（已完成）
5. 引入PyVista等高级3D库，提升交互与视觉效果（基础已实现，动画/场分布为后续扩展）
6. 持续扩展仿真与可视化功能

## 代码一致性与可维护性建议

- 推荐将全局常量（如 `SPEED_OF_SOUND`、`SAMPLING_RATE`）集中定义在 [src/simulation.py](mdc:src/simulation.py) 或专用配置模块，避免多处重复定义，确保一致性。
- Matplotlib 字体设置建议仅在主入口（如 [src/gui/main_window.py](mdc:src/gui/main_window.py) 或 [hello.py](mdc:hello.py)）统一设置，其他模块无需重复。

---

如需具体模块设计、技术选型对比或集成示例，可随时查阅本规则或补充新规则。

