---
description: 
globs: *.py
alwaysApply: false
---
# 项目发展方向与技术选型建议

## 当前基础
- 已实现基于 `pyroomacoustics` 的房间声学仿真、信号处理与评估。
- 具备自定义声源、麦克风类和基础2D可视化。

## 下一步目标
- 从命令行脚本工具升级为带有图形用户界面（GUI）和高级3D可视化的交互式应用。

## 1. GUI开发
- 目标：让用户通过图形界面设置仿真参数、运行仿真、查看结果。
- 推荐技术：
  - **PyQt6/PySide6**（推荐，功能强大，适合嵌入3D视图）
  - 也可用 Tkinter（简单）、Kivy、Dear PyGui 等
- 关键功能：
  - 场景设置（房间、声源、麦克风参数）
  - 仿真控制（运行、停止、参数设置）
  - 结果展示（集成matplotlib 2D绘图、评估指标、日志）
  - 配置管理（保存/加载场景）

## 2. 3D可视化
- 目标：三维展示房间、声源、麦克风及其空间关系，支持交互。
- 推荐技术：
  - **Matplotlib 3D**（快速实现基础3D展示）
  - **PyVista**（强烈推荐，适合高级3D渲染与交互，易与PyQt集成）
  - 也可考虑 Mayavi、Open3D、PyOpenGL 等
- 关键功能：
  - 3D房间结构、声源/麦克风空间分布
  - 交互式相机控制、对象选择与参数显示
  - （进阶）3D场景内编辑、声场分布可视化

## 3. 代码结构建议
- 推荐将 `src` 目录细分为：
  - `core/`：仿真核心（声学元素、房间仿真、信号处理）
  - `gui/`：GUI相关代码（主窗口、控件、对话框）
  - `visualization/`：2D/3D可视化模块
  - `utils/`：工具函数（如配置管理）
  - `main_app.py`：应用主入口，负责GUI初始化与模块集成

## 发展步骤建议
1. 代码重构与模块化，理清核心逻辑与接口
2. 搭建基础GUI，实现参数输入与2D结果展示
3. 集成基础3D可视化，展示空间布局
4. 增强GUI交互性，支持动态编辑与配置管理
5. 引入PyVista等高级3D库，提升交互与视觉效果
6. 持续扩展仿真与可视化功能

---

如需具体模块设计、技术选型对比或集成示例，可随时查阅本规则或补充新规则。

