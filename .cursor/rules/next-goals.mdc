---
description: 
globs: *.py
alwaysApply: false
---
# 项目下一步目标（2024.6 更新）

## 当前状态 (回顾)
- 已实现：
  - PySide6 GUI 框架，嵌入 Matplotlib 实现的2D信号图 (RIR/时域/频域)。
  - **已迁移3D场景至 PyVista (`QtInteractor`)，实现嵌入式GUI显示和基本对象拾取。**
  - GUI支持动态增删声源/麦克风（目前仅配置位置）。
  - 支持仿真配置的保存与加载 (JSON格式，包含房间/声源/麦克风位置等基础参数)。
  - **声源参数化、麦克风参数化、PyVista基础交互已实现。**

## 下一步详细计划（2024.6）

### 1. 多声源信号同时仿真（核心重构，最高优先级）
- 支持多个声源各自独立信号并在仿真中叠加。
- 修改 `simulate_with_pyroomacoustics`，支持多个 `SoundSource` 实例。
- GUI允许为每个声源配置不同信号类型和参数。
- 结果展示和评估适配多声源情形。

### 2. 配置管理体验优化
- 配置文件默认保存/加载路径（如 `configs/` 目录，自动创建）。
- 配置文件格式升级：分层字典结构+版本号，兼容未来扩展。
- 读取时保留未知字段，支持向后/向前兼容。
- 增加"最近使用配置"或"快速保存/加载"功能（可选）。

### 3. 3D可视化与用户体验增强
- 3D视图对象高亮、属性面板、视角重置等。
- 优化3D交互体验。
- 受限于 pyvistaqt 的 QtInteractor 实现，当前3D对象点击仅支持属性显示，暂不支持真正的actor高亮（见 visualization3d_rule.mdc 说明）。

### 4. 持续完善输入校验与文档
- 更严格的输入校验与错误提示。
- 持续完善用户文档和开发注释。

### 5. 代码一致性与用户体验持续优化

- 集中管理全局常量和Matplotlib字体设置，提升维护性。
- 优化属性面板编辑交互，提升易用性。
- 增强输入校验与异常提示，提升健壮性。
- 持续完善文档和示例配置，便于新用户快速上手。

---

## 技术选型回顾与建议

- **3D可视化**: 已从Matplotlib迁移到 **PyVista (`QtInteractor`)**，实现了GUI嵌入。后续利用其高级交互和渲染能力。
    - 相关文件: [src/visualization3d.py](mdc:src/visualization3d.py), [src/gui/main_window.py](mdc:src/gui/main_window.py)
- **2D可视化**: 继续使用 Matplotlib 嵌入GUI。
- **GUI框架**: PySide6。
- **核心仿真**: [pyroomacoustics](mdc:src/simulation.py)。

---

如需具体模块设计、参数面板示例、特定功能实现代码等，可随时查阅本规则或补充新规则。






